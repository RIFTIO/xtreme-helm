# Copyright 2020 RIFT Inc
# Copyright 2021 DZS Inc
#
{{- define "default-backend-service" }}
{{- printf "--default-backend-service=%s/ingress-default-backend" .Values.global.namespace.name }}
{{- end }}
{{- define "default-ssl-certificate" }}
{{- printf "--default-ssl-certificate=%s/rw-tls-secret" .Values.global.namespace.name }}
{{- end }}
{{- define "configmap" }}
{{- printf "--configmap=%s/haproxy-configmap" .Values.global.namespace.name }}
{{- end }}
{{- define "tcp-services-configmap" }}
{{- printf "--tcp-services-configmap=%s/haproxy-tcp-configmap" .Values.global.namespace.name }}
{{- end }}
{{- $useLatestHaProxy := true }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: haproxy-ingress
  name: rw-haproxy
  namespace: {{ .Values.global.namespace.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      run: haproxy-ingress
  template:
    metadata:
      labels:
        run: haproxy-ingress
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: haproxy-ingress-service-account
      {{- if and .Values.global.ensureSecurityContext (not (has "appHaproxy" .Values.global.excludeAppsInSecurityContext)) }}
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsUser: {{ .Values.haproxyIngress.runAsUser }}
        runAsGroup: {{ .Values.global.defaultGroup }}
      {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      imagePullSecrets:
        {{ if .Values.imagePullSecrets }}
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
        {{ else }}
        {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
        {{- end }}

      containers:
        - name: haproxy-ingress
        {{- if $useLatestHaProxy }}
          image: {{ .Values.image.repository_latest -}} : {{- .Values.image.tag_latest }}
        {{- else }}
          image: {{ .Values.image.repository -}} : {{- .Values.image.tag }}
        {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - {{ template "default-backend-service" . }}
            - {{ template "default-ssl-certificate" . }}
            - {{ template "configmap" . }}
            - {{ template "tcp-services-configmap" . }}
            - "--watch-namespace=$(POD_NAMESPACE)"
            - "--force-namespace-isolation=true"
            - "--disable-node-list=true"
          {{- if $useLatestHaProxy }}
            - "--watch-ingress-without-class=true"
          {{- end }}

          {{- if and .Values.global.ensureResourceQuota (not (has "appHaproxy" .Values.global.excludeAppsInResourceQuota)) }}
          {{- include "common.small.ephemeral" . | nindent 2}}
          {{- end }}

          {{- if and .Values.global.ensureSecurityContext (not (has "appHaproxy" .Values.global.excludeAppsInSecurityContext)) }}
          securityContext:
            {{ toYaml .Values.global.partialSecurityContext | nindent 12 }}
            runAsUser: {{ .Values.haproxyIngress.runAsUser }}
            runAsGroup: {{ .Values.global.defaultGroup }}
          {{- end }}

          {{- if and .Values.global.ensureContainerProbe (not (has "appHaproxy" .Values.global.excludeAppsInContainerProbe)) }}
          readinessProbe:
            tcpSocket:
              port: 1936
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 1936
            initialDelaySeconds: 15
            periodSeconds: 20
          {{- end }}

          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          {{- if and .Values.global.ensureEmptyDirCreation (not (has "appHaproxy" .Values.global.excludeAppsInEmptyDirCreation)) }}
          volumeMounts:
          - mountPath: /etc/haproxy/
            name: cache-volume
          - mountPath: /var/lib/haproxy
            name: cache-volume2
          - mountPath: /var/run/haproxy
            name: cache-volume3
          {{- end }}
        - name: haproxy-exporter
          image: {{ .Values.exporter.image.repository -}} : {{- .Values.exporter.image.tag }}
          imagePullPolicy: {{ .Values.exporter.image.pullPolicy }}
          args:
            - --haproxy.scrape-uri=http://127.0.0.1:1936/haproxy?stats;csv
          ports:
             - name: prom-metrics
               containerPort: 9101

          {{- if and .Values.global.ensureResourceQuota (not (has "appHaproxy" .Values.global.excludeAppsInResourceQuota)) }}
          {{- include "common.small.ephemeral" . | nindent 2 }}
          {{- end }}

          {{- if and .Values.global.ensureSecurityContext (not (has "appHaproxy" .Values.global.excludeAppsInSecurityContext)) }}
          securityContext:
            {{ toYaml .Values.global.partialSecurityContext | nindent 12 }}
            runAsUser: {{ .Values.haproxyIngress.runAsUser }}
            runAsGroup: {{ .Values.global.defaultGroup }}
          {{- end }}

          {{- if and .Values.global.ensureContainerProbe (not (has "appHaproxy" .Values.global.excludeAppsInContainerProbe)) }}
          readinessProbe:
            tcpSocket:
              port: 9101
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 9101
            initialDelaySeconds: 15
            periodSeconds: 20
          {{- end }}
      {{- if and .Values.global.ensureEmptyDirCreation (not (has "appHaproxy" .Values.global.excludeAppsInEmptyDirCreation)) }}
      volumes:
      - name: cache-volume
        emptyDir:
          sizeLimit: 500Mi
      - name: cache-volume2
        emptyDir:
          sizeLimit: 500Mi
      - name: cache-volume3
        emptyDir:
          sizeLimit: 500Mi
      {{- end }}
