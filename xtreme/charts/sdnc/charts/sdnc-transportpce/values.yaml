# Copyright 2022 DZS Inc
# Default values for lighty-rnc-app-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
#

appName: "dzs-sdnc-transportpce"
svcName: "tpce"
moduleName: "tpce"
fullnameOverride: ""
nameOverride: ""

initContainer:
  waitForDep:
    image:
      repository: rt.cloud.dzsi.local/docker/ghcr.io/patrickdappollonio/wait-for
      pullPolicy: IfNotPresent
      tag: v1.0.0

image:
  name: rt.cloud.dzsi.local/docker/sdnc/dzs-transportpce
  #tag: master
  pullPolicy: IfNotPresent


lighty:
  # Must be same as defined in Docker image
  workdir: "/lighty-rnc"
  configDirectoryName: "k8s-config"
  # Name of the config file must be same as property in configmap
  configFilename: "lighty-config.json"
  # Name of the config file for initial logger configuration, must be same as property in configmap
  loggerConfigFilename: "log4j2.xml"
  # If using cluster (not single-node deployment), don't forget to increase replica count
  replicaCount: 1
  restconf:
    restconfPort: 8888
    restconfPath: "/restconf"
    useHttps: false
    keyStorePassword: "8pgETwat"
    keyStoreType: "JKS"
    keyStoreDirectory: "keystore"
    keyStoreFileName: "lightyio.jks"
  volume:
    name: transportpce-volume
    kind: PersistentVolumeClaim
    mountPath: "target"
    pvc:
      name: transportpce-volume-claim
      accessMode: ReadWriteOnce
      storage: 1Gi
      storageClassName: null
  serviceConfig:
    '"serviceConfig": {
    "serviceName": "transportpce",
    "nbinotification": enableNbinotification,
    "tapi": false,
    "olmtimer1": "3000",
    "olmtimer2": "30000",
    "gnpyServer": "http://gnpy-svc-name:8008"
  }'

  initData:
    hasInitData: true

  jmx:
    # Port on which JMX server in image is listening, should be same as defined in dockerfile
    # If true, allow remote connections to JMX server running in container image, useful for debugging
    enableJmxRemoting: true
    jmxPort: 1099

  akka:
    # If true, overrides akka cluster configuration with default single-node
    isSingleNode: true
    # Name of the config file must be same as property in configmap
    akkaNodeConfigFilename: "akka-node-k8s.conf"
    # At least three nodes are required for akka voting
    minimumClusterNodes: 3
    # Prefix for akka member name; in configmap POD IP address will be appended to prefix
    memberNamePrefix: "member-"
    remotingPort: 2552
    managementPort: 8558
    discovery:
      # Where should akka look for other members to form cluster
      podSelectorName: "app"
      podSelectorValue: "lighty-k8s-cluster"
      portName: "management"
      podNamespace: "default"

  aaa:
    # If true, AAA lighty.io component will be enabled
    enableAAA: false
  log4j:
    logDir: transportpce
    fileName: transportpce.log

sdnc:
  volume:
    log:
      name: transportpce-log-volume
      kind: PersistentVolumeClaim
      pvc:
        name: transportpce-log-volume-claim
        accessMode: ReadWriteOnce
        storage: 1Gi
        mountPath: /data/log/tpce
        log4j2Version: true
        storageClassName: null
    plugins:
      enableExtPlugins: true
      name: transportpce-plugins
      mountPath: /lighty-rnc/plugins/transportpce
      hostPath: /data/plugins/transportpce
  log:
    appLogFile: tpce
    eventLogFile: tpce
    eventLogDirectory: tpce

fluentd:
  image:
    repository: rt.cloud.dzsi.local/docker/rw.fluentd
    pullPolicy: IfNotPresent
    tag: 0.1

sftp:
  port: 22

nodePort:
  # If switched to "true", NodePort service will be created; If switched to "false", ClusterIp service will be created
  useNodePort: false
  restconfNodePort: 33017
  exposeManagement: false
  managementNodePort: 33011

ingress:
  useIngress: false
  prefix: "/transportpce"
  restconfHost: "restconf.transportpce.sdnc.dzsi.com"
  exposeManagement: false
  managementHost: "management.transportpce.sdnc.dzsi.com"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   memory: 512Mi
  #   cpu: 1000m
  # requests:
  #   memory: 256Mi
#   cpu: 500m

daexim:
  enable: true
  volume:
    name: daexim-volume
    kind: PersistentVolumeClaim
    pvc:
      name: daexim-volume-claim
      accessMode: ReadWriteOnce
      storage: 1Gi
      mountPath: /lighty-rnc/daexim/daexim
      storageClassName: null

java:
  opts:
    xmx: "-Xmx2g"  
    
